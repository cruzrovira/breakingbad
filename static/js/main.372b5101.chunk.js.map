{"version":3,"sources":["logo.png","components/quote.js","components/spinners.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","QuoteStyled","styled","div","Quote","quote","className","author","SpinnersStyled","Spinners","class","AppStyled","App","useState","setQuote","spinners","setSpinners","searchQuote","a","fetch","data","json","dataJson","useEffect","src","logo","alt","onClick","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,kC,ucCG3C,IAAMC,EAAcC,IAAOC,IAAV,KAwBFC,EAXD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACf,OACE,kBAACJ,EAAD,KACE,2BAAII,EAAMA,OACV,uBAAGC,UAAU,UAAb,WAA+BD,EAAME,U,+tHCjB3C,IAAMC,EAAiBN,IAAOC,IAAV,KA6KLM,EArBE,WACf,OACE,kBAACD,EAAD,KACE,yBAAKE,MAAM,aACT,yBAAKA,MAAM,wBACX,yBAAKA,MAAM,wBACX,yBAAKA,MAAM,wBACX,yBAAKA,MAAM,wBACX,yBAAKA,MAAM,wBACX,yBAAKA,MAAM,wBACX,yBAAKA,MAAM,wBACX,yBAAKA,MAAM,wBACX,yBAAKA,MAAM,wBACX,yBAAKA,MAAM,yBACX,yBAAKA,MAAM,yBACX,yBAAKA,MAAM,4B,0dCpKnB,IAAMC,EAAYT,IAAOC,IAAV,KAmDAS,EA1BH,WAAO,IAAD,EACQC,mBAAS,IADjB,mBACXR,EADW,KACJS,EADI,OAEcD,oBAAS,GAFvB,mBAEXE,EAFW,KAEDC,EAFC,KAIVC,EAAW,uCAAG,8BAAAC,EAAA,6DAClBF,GAAY,GACF,kDAFQ,SAGDG,MADP,mDAFQ,cAGdC,EAHc,gBAIGA,EAAKC,OAJR,OAIdC,EAJc,OAKlBR,EAASQ,EAAS,IAClBN,GAAY,GANM,4CAAH,qDAajB,OAJAO,qBAAU,WACRN,MACC,IAGD,kBAACN,EAAD,KACE,yBAAKa,IAAKC,IAAMC,IAAI,SACnBX,EAAW,kBAAC,EAAD,MAAe,kBAAC,EAAD,CAAOV,MAAOA,IACzC,4BAAQsB,QAASV,GAAjB,WCxCcW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.372b5101.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.a8bde326.png\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nconst QuoteStyled = styled.div`\r\n  background: #fff;\r\n  box-shadow: 1px 2px 3px rgba(0, 0, 0, 0.3);\r\n  margin: 1.5em 0;\r\n  padding: 10px;\r\n  width: 100%;\r\n\r\n  .author {\r\n    margin: 0;\r\n    text-align: right;\r\n  }\r\n`;\r\n\r\nconst Quote = ({ quote }) => {\r\n  return (\r\n    <QuoteStyled>\r\n      <p>{quote.quote}</p>\r\n      <p className=\"author\">Author: {quote.author}</p>\r\n    </QuoteStyled>\r\n  );\r\n};\r\nQuote.propTypes = {\r\n  quote: PropTypes.object.isRequired,\r\n};\r\nexport default Quote;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SpinnersStyled = styled.div`\r\n  .sk-circle {\r\n    margin: 100px auto;\r\n    width: 40px;\r\n    height: 40px;\r\n    position: relative;\r\n  }\r\n  .sk-circle .sk-child {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n  }\r\n  .sk-circle .sk-child:before {\r\n    content: \"\";\r\n    display: block;\r\n    margin: 0 auto;\r\n    width: 15%;\r\n    height: 15%;\r\n    background-color: #fff;\r\n    border-radius: 100%;\r\n    -webkit-animation: sk-circleBounceDelay 1.2s infinite ease-in-out both;\r\n    animation: sk-circleBounceDelay 1.2s infinite ease-in-out both;\r\n  }\r\n  .sk-circle .sk-circle2 {\r\n    -webkit-transform: rotate(30deg);\r\n    -ms-transform: rotate(30deg);\r\n    transform: rotate(30deg);\r\n  }\r\n  .sk-circle .sk-circle3 {\r\n    -webkit-transform: rotate(60deg);\r\n    -ms-transform: rotate(60deg);\r\n    transform: rotate(60deg);\r\n  }\r\n  .sk-circle .sk-circle4 {\r\n    -webkit-transform: rotate(90deg);\r\n    -ms-transform: rotate(90deg);\r\n    transform: rotate(90deg);\r\n  }\r\n  .sk-circle .sk-circle5 {\r\n    -webkit-transform: rotate(120deg);\r\n    -ms-transform: rotate(120deg);\r\n    transform: rotate(120deg);\r\n  }\r\n  .sk-circle .sk-circle6 {\r\n    -webkit-transform: rotate(150deg);\r\n    -ms-transform: rotate(150deg);\r\n    transform: rotate(150deg);\r\n  }\r\n  .sk-circle .sk-circle7 {\r\n    -webkit-transform: rotate(180deg);\r\n    -ms-transform: rotate(180deg);\r\n    transform: rotate(180deg);\r\n  }\r\n  .sk-circle .sk-circle8 {\r\n    -webkit-transform: rotate(210deg);\r\n    -ms-transform: rotate(210deg);\r\n    transform: rotate(210deg);\r\n  }\r\n  .sk-circle .sk-circle9 {\r\n    -webkit-transform: rotate(240deg);\r\n    -ms-transform: rotate(240deg);\r\n    transform: rotate(240deg);\r\n  }\r\n  .sk-circle .sk-circle10 {\r\n    -webkit-transform: rotate(270deg);\r\n    -ms-transform: rotate(270deg);\r\n    transform: rotate(270deg);\r\n  }\r\n  .sk-circle .sk-circle11 {\r\n    -webkit-transform: rotate(300deg);\r\n    -ms-transform: rotate(300deg);\r\n    transform: rotate(300deg);\r\n  }\r\n  .sk-circle .sk-circle12 {\r\n    -webkit-transform: rotate(330deg);\r\n    -ms-transform: rotate(330deg);\r\n    transform: rotate(330deg);\r\n  }\r\n  .sk-circle .sk-circle2:before {\r\n    -webkit-animation-delay: -1.1s;\r\n    animation-delay: -1.1s;\r\n  }\r\n  .sk-circle .sk-circle3:before {\r\n    -webkit-animation-delay: -1s;\r\n    animation-delay: -1s;\r\n  }\r\n  .sk-circle .sk-circle4:before {\r\n    -webkit-animation-delay: -0.9s;\r\n    animation-delay: -0.9s;\r\n  }\r\n  .sk-circle .sk-circle5:before {\r\n    -webkit-animation-delay: -0.8s;\r\n    animation-delay: -0.8s;\r\n  }\r\n  .sk-circle .sk-circle6:before {\r\n    -webkit-animation-delay: -0.7s;\r\n    animation-delay: -0.7s;\r\n  }\r\n  .sk-circle .sk-circle7:before {\r\n    -webkit-animation-delay: -0.6s;\r\n    animation-delay: -0.6s;\r\n  }\r\n  .sk-circle .sk-circle8:before {\r\n    -webkit-animation-delay: -0.5s;\r\n    animation-delay: -0.5s;\r\n  }\r\n  .sk-circle .sk-circle9:before {\r\n    -webkit-animation-delay: -0.4s;\r\n    animation-delay: -0.4s;\r\n  }\r\n  .sk-circle .sk-circle10:before {\r\n    -webkit-animation-delay: -0.3s;\r\n    animation-delay: -0.3s;\r\n  }\r\n  .sk-circle .sk-circle11:before {\r\n    -webkit-animation-delay: -0.2s;\r\n    animation-delay: -0.2s;\r\n  }\r\n  .sk-circle .sk-circle12:before {\r\n    -webkit-animation-delay: -0.1s;\r\n    animation-delay: -0.1s;\r\n  }\r\n\r\n  @-webkit-keyframes sk-circleBounceDelay {\r\n    0%,\r\n    80%,\r\n    100% {\r\n      -webkit-transform: scale(0);\r\n      transform: scale(0);\r\n    }\r\n    40% {\r\n      -webkit-transform: scale(1);\r\n      transform: scale(1);\r\n    }\r\n  }\r\n\r\n  @keyframes sk-circleBounceDelay {\r\n    0%,\r\n    80%,\r\n    100% {\r\n      -webkit-transform: scale(0);\r\n      transform: scale(0);\r\n    }\r\n    40% {\r\n      -webkit-transform: scale(1);\r\n      transform: scale(1);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Spinners = () => {\r\n  return (\r\n    <SpinnersStyled>\r\n      <div class=\"sk-circle\">\r\n        <div class=\"sk-circle1 sk-child\"></div>\r\n        <div class=\"sk-circle2 sk-child\"></div>\r\n        <div class=\"sk-circle3 sk-child\"></div>\r\n        <div class=\"sk-circle4 sk-child\"></div>\r\n        <div class=\"sk-circle5 sk-child\"></div>\r\n        <div class=\"sk-circle6 sk-child\"></div>\r\n        <div class=\"sk-circle7 sk-child\"></div>\r\n        <div class=\"sk-circle8 sk-child\"></div>\r\n        <div class=\"sk-circle9 sk-child\"></div>\r\n        <div class=\"sk-circle10 sk-child\"></div>\r\n        <div class=\"sk-circle11 sk-child\"></div>\r\n        <div class=\"sk-circle12 sk-child\"></div>\r\n      </div>\r\n    </SpinnersStyled>\r\n  );\r\n};\r\n\r\nexport default Spinners;\r\n","import React, { useEffect, useState } from \"react\";\nimport logo from \"./logo.png\";\nimport styled from \"styled-components\";\n\nimport Quote from \"./components/quote\";\nimport Spinners from \"./components/spinners\";\nconst AppStyled = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  margin: auto;\n  width: 400px;\n\n  img {\n    width: 100%;\n  }\n  button {\n    border-radius: 4px;\n    border: none;\n    box-shadow: 1px 2px 3px rgba(0, 0, 0, 0.3);\n    color: #007d35;\n    cursor: pointer;\n    line-height: 3em;\n    outline: none;\n    width: 16em;\n  }\n  button:active {\n    transform: scale(0.9);\n  }\n`;\n\nconst App = () => {\n  let [quote, setQuote] = useState({});\n  let [spinners, setSpinners] = useState(true);\n\n  const searchQuote = async () => {\n    setSpinners(true);\n    let url = \"https://www.breakingbadapi.com/api/quote/random\";\n    let data = await fetch(url);\n    let dataJson = await data.json();\n    setQuote(dataJson[0]);\n    setSpinners(false);\n  };\n\n  useEffect(() => {\n    searchQuote();\n  }, []);\n\n  return (\n    <AppStyled>\n      <img src={logo} alt=\"logo\" />\n      {spinners ? <Spinners /> : <Quote quote={quote} />}\n      <button onClick={searchQuote}>Quote</button>\n    </AppStyled>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}